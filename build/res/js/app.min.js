/*! built for dogfeed 2013-06-28 */
angular.module("dogfeed",["ngRSS","ngSockethubClient"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"feeds.html"}).otherwise({redirectTo:"/"})}]).run(["SockethubSettings","SH","$rootScope","RS","$timeout",function(a,b,c,d,e){d.isConnected()||e(function(){d.isConnected()||c.$broadcast("message",{message:"remotestorage-connect",timeout:!1})},1e3)}]).run(["SockethubSettings","SH","$rootScope","RS",function(a,b,c,d){d.call("sockethub","getConfig",[""]).then(function(d){console.log("GOT SH CONFIG: ",d),d||(d=a.conn),d.host="silverbucket.net",d.port=443,d.path="/sockethub",d.tls=!0,console.log("USING SH CONFIG: ",d),c.$broadcast("message",{type:"clear"}),a.save("conn",d),b.connect().then(function(){return b.register()}).then(function(){console.log("connected to sockethub")},function(a){console.log("error connection to sockethub: ",a),c.$broadcast("SockethubConnectFailed",{message:a})})},function(a){console.log("RS.call error: ",a)})}]).run(["$rootScope",function(a){a.$on("showModalAddFeed",function(a,b){backdrop_setting=!0,"object"==typeof b&&"undefined"!=typeof b.locked&&b.locked&&(backdrop_setting="static"),$("#modalAddFeed").modal({show:!0,keyboard:!0,backdrop:backdrop_setting})}),a.$on("closeModalAddFeed",function(){$("#modalAddFeed").modal("hide")})}]).filter("urlEncode",[function(){return function(a){return encodeURIComponent(escape(a))}}]).controller("titlebarCtrl",["$scope","$rootScope",function(a,b){a.addFeed=function(){b.$broadcast("showModalAddFeed",{locked:!1})},a.sockethubSettings=function(){b.$broadcast("showModalSockethubSettings",{locked:!1})}}]).directive("message",["$rootScope","$timeout",function(a,b){return{restrict:"A",template:'<div class="alert alert-{{ m.type }}" ng-show="haveMessage">  <strong>{{m.title}}</strong>   <span>{{m.message}}</span></div>',link:function(c){c.haveMessage=!1,c.m={type:"",title:"",message:""};var d={"remotestorage-connect":{type:"error",title:"Connect to remoteStorage",message:"First things first. You must connect to your remoteStorage"},"sockethub-config":{type:"error",title:"Sockethub configuration needed",message:"You must fill in your Sockethub connection details"},"sockethub-connect":{type:"error",title:"Sockethub connection error",message:"Unable to connect to Sockethub please check your configuration and try again"},"sockethub-register":{type:"error",title:"Sockethub registration problem",message:"We were unable to register with your Sockethub instance"},"xmpp-connect":{type:"error",title:"XMPP connection failed",message:"There was a problem connecting to the XMPP server, please verify you settings"},unknown:{type:"error",title:"An unknown error has occurred",message:""}};a.$on("message",function(a,e){var f="boolean"==typeof e.timeout?e.timeout:!0;return c.haveMessage=!1,"undefined"==typeof e&&(e="no error specified"),"clear"===e.type?(c.haveMessage=!1,c.m={type:"",title:"",message:""},void 0):("undefined"!=typeof d[e.message]?c.m=d[e.message]:"string"==typeof e.message&&(c.m.title="success"===e.type?"Success":"Error",c.m.message=e.message,c.m.type=e.type),c.haveMessage=!0,f&&b(function(){c.haveMessage=!1,c.m={type:"",title:"",message:""}},4e3),void 0)})}}}]),angular.module("ngRSS",["ngRemoteStorage","ngSockethubClient"]).value("configHelper",{exists:function(a,b){b||(b=a);for(var c in a)if(!b[c])return!1;return!0},set:function(a,b){for(var c in b)a[c]=b[c];return a}}).value("util",{isEmptyObject:function(a){for(var b in a)if(Object.prototype.hasOwnProperty.call(a,b))return!1;return!0}}).factory("RSS",["$q","SH","configHelper","RS","RSutil","$rootScope",function(a,b,c,d,e,f){function g(a){return c.exists(h,a)}var h={},i={articles:[],info:{}},j={};return j.setConfig=function(b){var d=a.defer();return g(b)?(b&&c.set(h,b),d.resolve(h)):d.reject("config not set correctly"),d.promise},function(){d.call("rss","getAll",[""]).then(function(a){for(var b in a){var c=a[b].url;i.info[c]=a[b],j.fetchFeed(c)}},function(a){console.log("error: unable to get feed list from remoteStorage: ",a)})}(),j.addFeed=function(b){var c=a.defer();return d.call("rss","add",[b]).then(function(a){console.log("feed added: ",b),i.info[b.url]=b,j.fetchFeed(b.url),c.resolve(a)},function(a){c.reject(a)}),c.promise},j.updateArticle=function(b){var c=a.defer(),e={link:b.object.link,title:b.object.title,date:b.object.data,html:b.object.html,text:b.object.text,brief_html:b.object.brief_html,brief_text:b.object.brief_text,read:b.object.read?!0:!1,source_link:b.actor.address,source_title:b.actor.name};return d.call("articles","update",[e]).then(function(a){c.resolve(a)},function(a){c.reject(a)}),c.promise},j.fetchFeed=function(c){var d=a.defer(),e={actor:{},target:[{}]};return e.target[0].address=c,e.platform="rss",e.verb="fetch",e.actor.address="rss",console.log("FETCH: ",e),b.submit(e,5e3).then(d.resolve,d.reject),d.promise},b.on("rss","message",function(a){var b=a.actor.address;if(a.status||f.$broadcast("message",{type:"error",message:a.target[0].address+" "+a.object.message}),i.info[b])i.info[b].name!==a.actor.name?(i.info[b].name=a.actor.name,j.addFeed(i.info[b]),i.info[b].loaded=!0):i.info[b].loaded=!0;else if(console.log("*** RSS: key doesn't match a feed entry [ "+b+" ]: ",a),!a.status){var c=a.target[0].address;i.info[c]&&(console.log("PROBLEM FEED SETTINGS:",i.info[c]),i.info[c].loaded=!0,i.info[c].error=!0,i.info[c].errorMsg=a.object.message)}if(a.object.read||(a.object.read=!1),a.status){console.log("adding: ",a);var g=e.encode(a.object.link);console.log("ID: ",g),d.call("articles","get",[g]).then(function(c){c&&(console.log("ARTICLE FETCH from RS: ",c),a.object.read=c.read),a.object.read||(i.info[b].unread="number"==typeof i.info[b].unread?i.info[b].unread+1:1),i.articles.push(a)},function(b){console.log("ARTICL FETCH ERROR: ",b),i.articles.push(a)})}}),{config:h,data:i,func:j}}]).controller("addFeedCtrl",["$scope","RSS","$rootScope",function(a,b,c){a.url="",a.adding=!1,a.add=function(d){a.adding=!0;var e={url:d,name:d,cache_articles:20,last_fetched:(new Date).getTime()};b.func.addFeed(e).then(function(b){console.log("rss feed url saved!: ",b),c.$broadcast("closeModalAddFeed"),a.adding=!1,c.$broadcast("message",{type:"success",message:"RSS feed added: "+e.url})},function(a){console.log("rss feed url save failed!: ",a),c.$broadcast("message",{type:"error",message:a.message})})}}]).controller("feedCtrl",["$scope","RSS","util","$rootScope",function(a,b,c,d){a.model={},a.model.feeds=b.data,a.model.message="",a.model.loading=!0,a.model.feeds.current={name:"",indexes:[]},a.isSelected=function(b,c){if(0===a.model.feeds.current.indexes.length)return c||!b?!0:!1;for(var d=0,e=a.model.feeds.current.indexes.length;e>d;d+=1)if(a.model.feeds.current.indexes[d]===b)return!0;return!1},a.switchFeed=function(c){c?(a.model.feeds.current.name=b.data.info[c].name,a.model.feeds.current.indexes=[c]):(a.model.feeds.current.name="",a.model.feeds.current.indexes=[])},a.showFeedSettings=function(){d.$broadcast("showModalFeedSettings",{locked:!1})},a.markRead=function(c){console.log("markRead Called!");for(var d=0,e=a.model.feeds.articles.length;e>d;d+=1)if(a.model.feeds.articles[d].object.link===c)return a.model.feeds.articles[d].object.read||(a.model.feeds.info[a.model.feeds.articles[d].actor.address].unread=a.model.feeds.info[a.model.feeds.articles[d].actor.address].unread-1,a.model.feeds.articles[d].object.read=!0,b.func.updateArticle(a.model.feeds.articles[d])),void 0},c.isEmptyObject(a.model.feeds.info)&&(a.model.message="loading feed list..."),a.$watch("$scope.model.feeds.info",function(){a.model.message=c.isEmptyObject(a.model.feeds.info)?"no feeds yet, add some!":""}),a.$watch("$scope.model.feeds.articles",function(a,b){console.log("article changed! ",a,b)}),d.$on("SockethubConnectFailed",function(b,c){d.$broadcast("message",{message:c.message,type:"error",timeout:!1}),a.model.loading=!0,d.$broadcast("showModalSockethubSettings",{locked:!1})})}]).directive("feedList",[function(){return{restrict:"E",scope:{feeds:"="},template:'<h4 ng-transclude></h4><span>{{ message }}<span><ul class="nav nav-list" ng-controller="feedCtrl">  <li ng-click="switchFeed()"       ng-class="{active: isSelected(), \'all-feeds\': true}">    <a href="" >      <i class="icon-globe"></i><span>All Items</span>    </a>  </li>  <li ng-repeat="f in feeds.info"      data-toggle="tooltip"       title="{{ f.url }}">    <i ng-click="showFeedSettings(f.url)"      ng-class="{status: true, \'icon-loading-small\': !f.loaded, \'icon-cog\': f.loaded}">    </i>    <div ng-click="switchFeed(f.url)"         ng-class="{active: isSelected(f.url), error: f.error, loading: !f.loaded, \'feed-entry\': true}">      <a href="" ng-class="{error: f.error}">        <span>{{ f.name }}</span> <span class="unread-count">{{ f.unread }}</span>      </a>    </div>  </li></ul>',transclude:!0}}]).directive("articles",[function(){return{restrict:"E",scope:{feeds:"="},template:'<h4>{{ feeds.current.name }}</h4><div ng-repeat="a in feeds.articles | orderBy:a.object.date"     ng-controller="feedCtrl"     ng-click="markRead(a.object.link)"     ng-class="{well: true, hide: !isSelected(a.actor.address, true), unread: !a.object.read, article: true}" >  <h2>{{ a.object.title }}</h2>  <p>feed: <i>{{ a.actor.name }}</i></p>  <p>date: <i>{{ a.object.date | date }}</i></p>  <p>article link: <i><a target="_blank" href="{{ a.object.link }}">{{ a.object.link }}</a><i></p>  <div class="article-body" data-ng-bind-html-unsafe="a.object.brief_html"></div></div>',link:function(a,b,c){a.$watch(c.feeds,function(a){console.log("WATCH attrs.feeds",a)});for(var d=document.getElementsByClassName("article"),e=0,f=d.length;f>e;e+=1)for(var g=d[e].getElementsByTagName("a"),h=0,i=g.length;i>h;h+=1)g[h].setAttribute("target","_blank")}}}]),angular.module("ngRemoteStorage",[]).value("RSutil",{encode:function(a){return console.log("rsutil encode: ",a),encodeURIComponent(escape(a))}}).factory("RS",["$rootScope","$q","$timeout",function(a,b,c){function d(){return remoteStorage.getBearerToken()}var e=!1;return remoteStorage.on("ready",function(){e=!0}),{isConnected:d,call:function(d,f,g){var h=b.defer();if(console.log("RS.call("+d+", "+f+", params):",g),"object"==typeof g&&"undefined"==typeof g[0])h.reject("RS.call params must be an array");else{var i=500;!function j(){if(e)try{remoteStorage[d][f].apply(null,g).then(function(b){a.$apply(function(){h.resolve(b)})},function(b){a.$apply(function(){h.reject(b)})})}catch(b){console.log("error : ",b),h.reject(b)}else console.log("RS not connected yet, delaying call "+i+"s"),3e4>i&&(i+=i+500),c(j,i)}()}return h.promise}}}]).controller("remoteStorageCtrl",[function(){remoteStorage.util.silenceAllLoggers(),remoteStorage.claimAccess({sockethub:"rw",rss:"rw",articles:"rw"}).then(function(){remoteStorage.displayWidget("remotestorage-connect",{redirectUri:window.location.protocol+"//"+window.location.host+"/rscallback.html"}),remoteStorage.sockethub.init(),remoteStorage.rss.init()})}]),angular.module("ngSockethubClient",[]).value("SockethubSettings",{conn:{host:"localhost",port:"10550",path:"/sockethub",tls:!1,secret:"1234567890"},env:{logo:"/res/img/sockethub-logo.svg"},save:function(a,b){return this.verify(a,b)?(this[a]=b,!0):!1},exists:function(a){this.verify(a,config)},verify:function(a,b){return b||(b=this[a]),b.host&&""!==b.host&&b.port&&""!==b.port&&b.path&&""!==b.path&&"boolean"==typeof b.tls&&b.secret&&""!==b.secret?!0:!1}}).factory("SH",["$rootScope","$q","$timeout","SockethubSettings",function(a,b,c,d){function e(){return l?l.isConnected():!1}function f(){return l?l.isRegistered():!1}function g(d){var e=b.defer(),f=500;return function g(){d.testFunc()?(console.log("SH: calling: "+d.callFunc),l[d.callFunc].apply(l,d.callParams).then(function(b){a.$apply(e.resolve(b))},function(b){a.$apply(e.reject(b))})):(console.log("SH: delaying call "+f+"s"),3e4>f&&(f+=2*f),c(g,f))}(),e.promise}function h(){var c=b.defer(),e="ws://";return d.conn.tls&&(e="wss://"),SockethubClient.connect({host:e+d.conn.host+":"+d.conn.port+d.conn.path,confirmationTimeout:3e3}).then(function(b){l=b,console.log("CONNECTED [connected: "+l.isConnected()+"] [registered: "+l.isRegistered()+"]"),l.on("message",function(b){b.platform&&m.message[b.platform]&&(console.log("SH passing message to platform: "+b.platform),a.$apply(m.message[b.platform](b)))}),l.on("error",function(b){console.log("SH received error: ",b),b.platform&&m.error[b.platform]&&(console.log("SH passing error to platform: "+b.platform),a.$apply(m.error[b.platform](b)))}),l.on("response",function(b){console.log("SH received response: ",b),b.platform&&m.response[b.platform]&&(console.log("SH passing response to platform: "+b.platform),a.$apply(m.response[b.platform](b)))}),l.on("close",function(b){console.log("SH received close: ",b),b&&b.platform&&m[close][b.platform]&&(console.log("SH passing close to platform: "+b.platform),a.$apply(m.close[b.platform](b)))}),a.$apply(function(){c.resolve()})},function(b){a.$apply(function(){c.reject(b)})}),c.promise}function i(){var a=b.defer();return console.log("SH.register() called"),g({testFunc:e,callFunc:"register",callParams:[{secret:d.conn.secret}]}).then(a.resolve,a.reject),a.promise}function j(a,c,d,e){var h=b.defer(),i={};return i[c]={},i[c][d]=e,g({testFunc:f,callFunc:"set",callParams:[a,i]}).then(h.resolve,h.reject),h.promise}function k(a,c){var d=b.defer();return g({testFunc:f,callFunc:"submit",callParams:[a,c]}).then(d.resolve,d.reject),d.promise}var l;d.conn;var m={error:{},message:{},response:{},close:{}},n=function(a,b,c){m[b][a]=c};return{connect:h,register:i,isConnected:e,isRegistered:f,set:j,submit:k,on:n}}]).run(["$rootScope",function(a){a.$on("showModalSockethubSettings",function(a,b){backdrop_setting=!0,"object"==typeof b&&"undefined"!=typeof b.locked&&b.locked&&(backdrop_setting="static"),$("#modalSockethubSettings").modal({show:!0,keyboard:!0,backdrop:backdrop_setting})}),a.$on("closeModalSockethubSettings",function(){$("#modalSockethubSettings").modal("hide")})}]).directive("sockethubSettings",["SH","SockethubSettings","$rootScope",function(a,b,c){return{restrict:"A",template:'<div id="modalSockethubSettings" class="modal hide fade">  <div class="modal-header">    <img src="{{ settings.env.logo }}" width="200" />  </div>  <div class="modal-body">    <form name="settingsSockethub" class="form-horizontal" novalidate>      <fieldset>        <div class="control-group">          <label for="host" class="control-label">Hostname</label>          <div class="controls">            <input type="text" class="required input-large" name="host" placeholder="Enter hostname..." ng-model="settings.conn.host" required>          </div>        </div>        <div class="control-group">          <label for="port" class="control-label">Port</label>          <div class="controls">            <input type="text" class="required input-small" name="port" placeholder="Enter port..." ng-model="settings.conn.port" required>          </div>        </div>        <div class="control-group">          <label for="path" class="control-label">Path</label>          <div class="controls">            <input type="text" class="required input-large" name="path" placeholder="Enter path (if any)..." ng-model="settings.conn.path">          </div>        </div>        <div class="control-group">          <label for="tls" class="control-label">TLS</label>          <div class="controls checkbox-control">            <input type="checkbox" name="tls" ng-model="settings.conn.tls">          </div>        </div>        <div class="control-group">          <label for="secret" class="control-label">Secret</label>          <div class="controls">            <input type="text" class="required input-xlarge" name="secret" placeholder="Enter secret..." ng-model="settings.conn.secret" required>          </div>        </div>        <div class="control-group">          <div class="controls">            <button ng-click="save(settings.conn)" ng-disabled="!settings.verify(\'conn\', settings.conn) || saving">Submit</button>          </div>        </div>      </fieldset>    </form>    <p></p>    <div class="message-container">      <div message></div>    </div>  </div>  <div class="modal-footer">  </div></div>',link:function(d){d.saving=!1,d.settings=b,d.save=function(e){d.saving=!0,c.$broadcast("message",{type:"clear"}),b.save("conn",e),a.connect().then(function(){return a.register()}).then(function(){d.saving=!1,console.log("connected to sockethub"),c.$broadcast("message",{message:"connected to sockethub",type:"success",timeout:!1})},function(a){d.saving=!1,console.log("error connection to sockethub: ",a),c.$broadcast("message",{message:a,type:"error",timeout:!1})})}}}}]);