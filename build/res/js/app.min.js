/*! built for dogfeed 2013-10-28 */
angular.module("dogfeed",["ngFeeds","ngSockethubClient","ngRemoteStorage","ngMessages"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"feeds.html"}).otherwise({redirectTo:"/"})}]).run(["RemoteStorageConfig",function(a){a.modules=[["sockethub","rw",{cache:!1}],["feeds","rw",{cache:!1}],["articles","rw",{cache:!1}]]}]).run(["MessagesConfig",function(a){a.timeout=15e3}]).run(["SockethubSettings","SH","RS","$rootScope","$timeout",function(a,b,c,d){function e(c){console.log("USING SH CONFIG: ",c),a.save("conn",c)?(d.$broadcast("message",{message:"attempting to connect to sockethub",type:"info",timeout:!1}),b.connect({register:!0}).then(function(){d.$broadcast("message",{message:"connected to sockethub",type:"success",timeout:!0})},function(a){console.log("error connecting to sockethub: ",a),d.$broadcast("SockethubConnectFailed",{message:a})})):d.$broadcast("message",{message:"failed saving sockethub credentials",type:"success",timeout:!0})}var f={host:"localhost",port:10550,path:"/sockethub",tls:!1,secret:"1234567890"};c.call("sockethub","getConfig",["dogfeed"],3e3).then(function(a){console.log("GOT SH CONFIG: ",a),("object"!=typeof a||"string"!=typeof a.host)&&(a=f),e(a)},function(a){console.log("RS.call error: ",a),e(f)})}]).run(["SockethubSettings","SH","$rootScope","RS","$timeout",function(a,b,c,d,e){d.isConnected()||e(function(){d.isConnected()||c.$broadcast("message",{message:"remotestorage-connect",timeout:!1})},6e3)}]).run(["$rootScope",function(a){a.$on("showModalAddFeed",function(a,b){backdrop_setting=!0,"object"==typeof b&&"undefined"!=typeof b.locked&&b.locked&&(backdrop_setting="static"),$("#modalAddFeed").modal({show:!0,keyboard:!0,backdrop:backdrop_setting})}),a.$on("closeModalAddFeed",function(){$("#modalAddFeed").modal("hide")})}]).filter("urlEncode",[function(){return function(a){return encodeURIComponent(escape(a))}}]).filter("fromNow",[function(){return function(a){return new Date(a).toDateString()}}]).filter("pagination",[function(){var a=0;return function(b){return console.log("pagination received: ",b),b?(a+=1,a>10?(console.log("pagination returned false"),!1):(console.log("pagination returned article: ",b),b)):!1}}]).controller("titlebarCtrl",["$scope","$rootScope","SockethubSettings","RS",function(a,b,c,d){a.addFeed=function(){b.$broadcast("showModalAddFeed",{locked:!1})},a.sockethubSettings=function(){b.$broadcast("showModalSockethubSettings",{locked:!1})},a.$watch("settings.connected",function(){c.connected&&(c.conn.port=Number(c.conn.port),d.call("sockethub","writeConfig",[c.conn]).then(function(){console.log("Sockethub config saved to remoteStorage")},function(a){console.log("Failed saving Sockethub config to remoteStorage: ",a)}))})}]),angular.module("ngSockethubClient",["ngCommandQueue"]).value("SockethubSettings",{conn:{host:"localhost",port:10550,path:"/sockethub",tls:!1,secret:"1234567890"},connected:!1,env:{logo:"/res/img/sockethub-logo.svg"},save:function(a,b){return this.verify(a,b)?(this[a]=b,this[a].port=+b.port,console.log("SH SAVE ["+a+"]: ",this[a]),!0):(console.log("SH SAVE FAILED "+a+": ",this[a]),!1)},exists:function(a){this.verify(a,settings.conn)},verify:function(a,b){return b||(b=this[a]),b.host&&""!==b.host&&b.port&&""!==b.port&&b.path&&""!==b.path&&"boolean"==typeof b.tls&&b.secret?!0:!1}}).factory("SH",["$rootScope","$q","$timeout","SockethubSettings","cQueue",function(a,b,c,d,e){function f(){return n?n.connected:!1}function g(){return n?n.registered:!1}function h(b){console.log("callSH called ",b),n[b.methods[0]].apply(n,b.params).then(function(c){a.$apply(function(){b.defer.resolve(c)})},function(c){a.$apply(function(){b.defer.reject(c.message)})})}function i(c){console.log("ngSockethubClient.connect() ",c);var e=b.defer(),f="ws://";d.connected=!1,d.conn.tls&&(f="wss://");var g={};return c&&c.register&&(g={register:{secret:d.conn.secret}}),console.log("SOCKEHTHUB CONNECT: "+f+d.conn.host+":"+d.conn.port+d.conn.path),n=SockethubClient.connect(f+d.conn.host+":"+d.conn.port+d.conn.path,g),n.on("connected",function(){console.log("Sockethub connected"),d.connected=!0,o.connected.sockethub?a.$apply(o.connected.sockethub()):a.$apply(function(){e.resolve()})}),n.on("registered",function(){console.log("Sockethub connected & registered"),d.connected=!0,o.registered.sockethub?a.$apply(o.registered.sockethub()):a.$apply(function(){e.resolve()})}),n.on("registration-failed",function(b){console.log("Sockethub register failed ",b),a.$apply(function(){e.reject(b)})}),n.on("failed",function(b){console.log("Sockethub connection failed ",b),a.$apply(function(){e.reject("Failed connecting to sockethub at "+f+d.conn.host+":"+d.conn.port+d.conn.path)})}),n.on("disconnected",function(a){console.log("SH received disconnect(close) "+a),d.connected=!1}),n.on("message",function(b){b.platform&&o.message[b.platform]?(console.log("SH passing message to platform: "+b.platform),a.$apply(o.message[b.platform](b))):console.log("SH received message with nothing to call: ",b)}),n.on("unexpected-response",function(a){console.log("SH unexpected response: ",a)}),e.promise}function j(){var a=b.defer();return console.log("SH.register() called"),p.add({methods:["register"],params:[{secret:d.conn.secret}],defer:a,timeout:0,condition:f}),a.promise}function k(a,c,d,e){var f=b.defer(),h={};return h[c]={},h[c][d]=e,p.add({methods:["set"],params:[a,h],defer:f,timeout:0,condition:g}),f.promise}function l(a,c){var d=b.defer();return p.add({condition:g,methods:["sendObject"],params:[a,c],defer:d,timeout:0}),d.promise}function m(a,b){p.add({condition:g,methods:["sendObject"],params:[a,b],defer:!1,timeout:0})}var n,o={error:{},message:{},response:{},close:{},registered:{},connected:{}},p=e.init(h),q=function(a,b,c){o[b][a]=c};return{connect:i,register:j,isConnected:f,isRegistered:g,set:k,submit:{call:l,queue:m},on:q}}]).run(["$rootScope",function(a){a.$on("showModalSockethubSettings",function(a,b){backdrop_setting=!0,"object"==typeof b&&"undefined"!=typeof b.locked&&b.locked&&(backdrop_setting="static"),$("#modalSockethubSettings").modal({show:!0,keyboard:!0,backdrop:backdrop_setting})}),a.$on("closeModalSockethubSettings",function(){$("#modalSockethubSettings").modal("hide")})}]).directive("sockethubSettings",["SH","$rootScope","SockethubSettings",function(a,b,c){return{restrict:"A",template:'<div id="modalSockethubSettings" class="modal fade"><div class="modal-dialog"><div class="modal-content">  <div class="modal-header" style="text-align:center;">    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>    <img data-ng-src="{{ sockethub.settings.env.logo }}" width="200" ng-cloak/>  </div>  <div class="modal-body">    <form name="settingsSockethub" role="form" novalidate>      <fieldset>        <div class="form-group">          <label for="host">Hostname</label>          <div class="controls">            <input type="text" class="required form-control" name="host" placeholder="Enter hostname..." ng-model="sockethub.settings.conn.host" required>          </div>        </div>        <div class="form-group">          <label for="port">Port</label>          <div class="controls">            <input type="text" class="required form-control" name="port" placeholder="Enter port..." ng-model="sockethub.settings.conn.port" required>          </div>        </div>        <div class="form-group">          <label for="path">Path</label>          <div class="controls">            <input type="text" class="required form-control" name="path" placeholder="Enter path (if any)..." ng-model="sockethub.settings.conn.path">          </div>        </div>        <div class="form-group">          <label>            <input type="checkbox" name="tls" ng-model="sockethub.settings.conn.tls"> TLS          </label>        </div>        <div class="form-group">          <label for="secret">Secret</label>          <div class="controls">            <input type="text" class="required form-control" name="secret" placeholder="Enter secret..." ng-model="sockethub.settings.conn.secret" required>          </div>        </div>      </fieldset>    <p></p>  </div>  <div class="modal-footer">        <div class="control-group">          <div class="controls">            <button class="btn btn-primary" ng-click="sockethub.save(sockethub.settings.conn)"                     ng-disabled="!sockethub.settings.verify(\'conn\', sockethub.settings.conn) || saving">Submit</button>          </div>        </div>    </form>  </div></div></div></div>',link:function(d){d.sockethub={saving:!1,settings:c},d.sockethub.save=function(c){d.sockethub.saving=!0,d.sockethub.settings.save("conn",c),b.$broadcast("message",{message:"attempting to connect to sockethub",type:"info",timeout:!1}),a.connect({register:!0}).then(function(){d.sockethub.saving=!1,console.log("connected to sockethub"),b.$broadcast("message",{message:"connected to sockethub",type:"success",timeout:!0}),$("#modalSockethubSettings").modal("hide")},function(a){d.sockethub.saving=!1,console.log("error connection to sockethub: ",a),b.$broadcast("message",{message:a,type:"error",timeout:!1})})}}}}]);