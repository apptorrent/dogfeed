/*! built for dogfeed 2013-10-22 */
angular.module("dogfeed",["ngRSS","ngSockethubClient","ngRemoteStorage"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"feeds.html"}).otherwise({redirectTo:"/"})}]).run(["SockethubSettings","SH","$rootScope","RS",function(a,b,c,d){function e(d){console.log("USING SH CONFIG: ",d),a.save("conn",d)?(c.$broadcast("message",{message:"attempting to connect to sockethub",type:"info",timeout:!1}),b.connect({register:!0}).then(function(){c.$broadcast("message",{message:"connected to sockethub",type:"success",timeout:!0})},function(a){console.log("error connecting to sockethub: ",a),c.$broadcast("SockethubConnectFailed",{message:a})})):c.$broadcast("message",{message:"failed saving sockethub credentials",type:"success",timeout:!0})}var f={host:"silverbucket.net",port:443,path:"/sockethub",tls:!0,secret:"1234567890"};d.call("sockethub","getConfig",["dogfeed"],3e3).then(function(a){console.log("GOT SH CONFIG: ",a),("object"!=typeof a||"string"!=typeof a.host)&&(a=f),e(a)},function(a){console.log("RS.call error: ",a),e(f)})}]).run(["SockethubSettings","SH","$rootScope","RS","$timeout",function(a,b,c,d,e){d.isConnected()||e(function(){d.isConnected()||c.$broadcast("message",{message:"remotestorage-connect",timeout:!1})},6e3)}]).run(["$rootScope",function(a){a.$on("showModalAddFeed",function(a,b){backdrop_setting=!0,"object"==typeof b&&"undefined"!=typeof b.locked&&b.locked&&(backdrop_setting="static"),$("#modalAddFeed").modal({show:!0,keyboard:!0,backdrop:backdrop_setting})}),a.$on("closeModalAddFeed",function(){$("#modalAddFeed").modal("hide")})}]).filter("urlEncode",[function(){return function(a){return encodeURIComponent(escape(a))}}]).filter("fromNow",[function(){return function(a){return new Date(a).toDateString()}}]).controller("titlebarCtrl",["$scope","$rootScope","SockethubSettings","RS",function(a,b,c,d){a.addFeed=function(){b.$broadcast("showModalAddFeed",{locked:!1})},a.sockethubSettings=function(){b.$broadcast("showModalSockethubSettings",{locked:!1})},a.$watch("settings.connected",function(){c.connected&&(c.conn.port=Number(c.conn.port),d.call("sockethub","writeConfig",[c.conn]).then(function(){console.log("Sockethub config saved to remoteStorage")},function(a){console.log("Failed saving Sockethub config to remoteStorage: ",a)}))})}]).directive("message",["$rootScope","$timeout",function(a,b){return{restrict:"A",template:'<div class="alert alert-{{ m.type }}" ng-show="haveMessage">  <strong>{{m.title}}</strong>   <span>{{m.message}}</span></div>',link:function(c){c.haveMessage=!1,c.m={type:"",title:"",message:""};var d={"remotestorage-connect":{type:"warning",title:"Connect to remoteStorage",message:"No changes will be saved, you must sign in to remoteStorage for persistence"},"sockethub-config":{type:"warning",title:"Sockethub configuration needed",message:"You must fill in your Sockethub connection details"},"sockethub-connect":{type:"danger",title:"Sockethub connection error",message:"Unable to connect to Sockethub please check your configuration and try again"},"sockethub-register":{type:"danger",title:"Sockethub registration problem",message:"We were unable to register with your Sockethub instance"},"xmpp-connect":{type:"danger",title:"XMPP connection failed",message:"There was a problem connecting to the XMPP server, please verify you settings"},unknown:{type:"danger",title:"An unknown error has occurred",message:""}};a.$on("message",function(a,e){var f="boolean"==typeof e.timeout?e.timeout:!0;return c.haveMessage=!1,"undefined"==typeof e&&(e="no error specified"),"clear"===e.type?(c.haveMessage=!1,c.m={type:"",title:"",message:""},void 0):("undefined"!=typeof d[e.message]?c.m=d[e.message]:"string"==typeof e.message&&("success"===e.type?c.m.title="Success":"info"===e.type?c.m.title="Info":(c.m.title="Danger!",e.type="danger"),c.m.message=e.message,c.m.type=e.type),c.m.timeout=f,console.log("done processing: ",c.m),c.haveMessage=!0,f&&b(function(){c.m.timeout&&(c.haveMessage=!1,c.m={type:"",title:"",message:"",timeout:!0})},4e3),void 0)})}}}]),angular.module("ngRSS",["ngRemoteStorage","ngSockethubClient"]).value("configHelper",{exists:function(a,b){b||(b=a);for(var c in a)if(!b[c])return!1;return!0},set:function(a,b){for(var c in b)a[c]=b[c];return a}}).value("util",{isEmptyObject:function(a){for(var b in a)if(Object.prototype.hasOwnProperty.call(a,b))return!1;return!0}}).factory("RSS",["$q","SH","configHelper","RS","RSutil","$rootScope",function(a,b,c,d,e,f){function g(a){return c.exists(j,a)}function h(a,b){k.info[a].error=!0,k.info[a].errorMsg=b,f.$broadcast("message",{message:b,type:"error"})}function i(a){k.info[a.url]=a;for(var b=!1,c=0,d=k.infoArray.length;d>c;c+=1)if(k.infoArray[c]&&k.infoArray[c].url===a.url){b=!0;break}b||(k.infoArray.push(k.info[a.url]),k.info[a.url].loaded=!1,l.fetchFeed(a.url).then(function(b){console.log("fetchFeed success: ",b),k.info[a.url].loaded=!0},function(b){console.log("fetchFeed failure: ",b),k.info[a.url].loaded=!0,h(a.url,"failed fetching feed list from sockethub: "+b)}))}var j={},k={articles:[],info:{},infoArray:[]},l={};return l.setConfig=function(b){var d=a.defer();return g(b)?(b&&c.set(j,b),d.resolve(j)):d.reject("config not set correctly"),d.promise},function(){d.call("rss","getAll",[""]).then(function(a){console.log("RSS: got feed urls from remoteStorage ",a);for(var b in a)a[b]&&"undefined"!=typeof a[b].url?(a[b].url,a[b].unread=0,l.addFeed(a[b],!0)):console.log("ERROR processing url["+b+"]: ",a[b])},function(a){console.log("error: unable to get feed list from remoteStorage: ",a),f.$broadcast("message",{message:"unable to get feed list from remotestorage",type:"error",timeout:!1})})}(),l.addFeed=function(b,c){var e=a.defer();return i(b),c||d.queue("rss","add",[b]),e.resolve(b),e.promise},l.updateFeed=function(b){var c=a.defer();return d.call("rss","add",[b]).then(function(a){k.info[b.url]=b,c.resolve(a)},function(a){c.reject(a)}),c.promise},l.removeFeed=function(b){var c=a.defer();return d.call("rss","remove",[b]).then(function(a){delete k.info[b];for(var d=0,e=k.infoArray.length;e>d;d+=1)if(k.infoArray[d]&&k.infoArray[d].url===b){k.infoArray.splice(d,1);break}for(console.log("articles count: "+k.articles.length),d=0,e=k.articles.length;e>d;d+=1)k.articles[d]&&k.articles[d].actor.address===b&&k.articles.splice(d,1);console.log("articles count: "+k.articles.length),console.log("feed removed: ",b),c.resolve(a)},function(a){c.reject(a)}),c.promise},l.updateArticle=function(b){var c=a.defer(),e={link:b.object.link,title:b.object.title,date:b.object.date,html:b.object.html,text:b.object.text,brief_html:b.object.brief_html,brief_text:b.object.brief_text,read:b.object.read?!0:!1,source_link:b.actor.address,source_title:b.actor.name};return d.call("articles","update",[e]).then(function(a){c.resolve(a)},function(a){c.reject(a)}),c.promise},l.fetchFeed=function(c){var d=a.defer(),e={actor:{},target:[{}]};return e.target[0].address=c,e.platform="rss",e.verb="fetch",e.actor.address="rss",console.log("FETCH: ",e),b.submit(e,5e3).then(d.resolve,d.reject),d.promise},b.on("rss","message",function(a){console.log("RSS received message ",a);var b=a.actor.address;if(a.status||(console.log("received error message from sockethub: ",a),f.$broadcast("message",{type:"error",message:a.target[0].address+" "+a.message})),k.info[b])k.info[b].name&&k.info[b].name!==k.info[b].url||(k.info[b].name=a.actor.name,l.addFeed(k.info[b]));else if(console.log("*** RSS: key doesn't match a feed entry [ "+b+" ]: ",a),!a.status){var c=a.target[0].address;k.info[c]&&(console.log("PROBLEM FEED SETTINGS:",k.info[c]),k.info[c].loaded=!0,k.info[c].error=!0,k.info[c].errorMsg=a.object.message)}a.object.read||(a.object.read=!1,k.info[b].unread="number"==typeof k.info[b].unread?k.info[b].unread+1:1),k.articles.push(a),a.status&&d.call("articles","getByUrl",[a.object.link]).then(function(c){c&&(a.object.read=c.read?c.read:!1),a.object.read&&(k.info[b].unread="number"==typeof k.info[b].unread?k.info[b].unread-1:0)},function(a){console.log("ARTICLE FETCH ERROR: ",a)})}),{config:j,data:k,func:l}}]).controller("addFeedCtrl",["$scope","RSS","$rootScope",function(a,b,c){a.url="",a.adding=!1,a.add=function(d){a.adding=!0;var e={url:d,name:d,cache_articles:20,last_fetched:(new Date).getTime()};b.func.addFeed(e).then(function(){c.$broadcast("closeModalAddFeed"),a.adding=!1,c.$broadcast("message",{type:"success",message:"RSS feed added: "+e.url})},function(a){console.log("rss feed url save failed!: ",a),c.$broadcast("message",{type:"error",message:a.message})})}}]).controller("feedCtrl",["$scope","RSS","util","$rootScope","$timeout",function(a,b,c,d){a.model={},a.model.settings={showRead:!0},a.model.feeds=b.data,a.model.feeds.current={name:"",indexes:[]},a.model.feeds.edit||(a.model.feeds.edit=""),a.model.feeds._editName||(a.model.feeds._editName=""),a.model.saving=!1,a.isSelected=function(b,c){if(0===a.model.feeds.current.indexes.length)return c||!b?!0:!1;for(var d=0,e=a.model.feeds.current.indexes.length;e>d;d+=1)if(a.model.feeds.current.indexes[d]===b)return!0;return!1},a.isShowable=function(b,c,d){return a.isSelected(b,!0)?c?d.showRead?!0:!1:!0:!1},a.currentIsEmpty=function(b){if(!a.model.feeds.current.name)return!1;for(var c=0,d=a.model.feeds.current.indexes.length;d>c;c+=1){if(a.model.feeds.info[a.model.feeds.current.indexes[c]]&&a.model.feeds.info[a.model.feeds.current.indexes[c]].unread>0)return!1;if(b.showRead)return!1}return!0},a.switchFeed=function(c,d){return console.log("SWITCH FEED: "+c),d?!1:(c?(a.model.feeds.current.name=b.data.info[c].name,a.model.feeds.current.indexes=[c]):(a.model.feeds.current.name="",a.model.feeds.current.indexes.length=0),void 0)},a.showFeedSettings=function(b){console.log("showFeedSettings: "+b),b&&(a.model.feeds.edit=b,a.model.feeds._editName=a.model.feeds.info[a.model.feeds.edit].name,$("#modalFeedSettings").modal({show:!0,keyboard:!0,backdrop:!0}))},a.cancelFeedSettings=function(){$("#modalFeedSettings").modal("hide"),a.model.feeds.info[a.model.feeds.edit].name=a.model.feeds._editName,a.saving=!1},a.saveFeedSettings=function(c){a.saving=!0,b.func.updateFeed(a.model.feeds.info[c]).then(function(){$("#modalFeedSettings").modal("hide"),d.$broadcast("message",{type:"success",message:"updated feed "+c}),a.saving=!1},function(b){console.log("rss feed update failed!: ",b),d.$broadcast("message",{type:"error",message:b.message}),$("#modalFeedSettings").modal("hide"),a.saving=!1})},a.deleteFeed=function(c){a.saving=!0,b.func.removeFeed(c).then(function(){$("#modalFeedSettings").modal("hide"),d.$broadcast("message",{type:"success",message:"deleted feed "+c}),a.saving=!1,a.isSelected(c)&&a.switchFeed(c)},function(b){console.log("error removing rss feed!: ",b),d.$broadcast("message",{type:"error",message:b.message}),$("#modalFeedSettings").modal("hide"),a.saving=!1})},a.markRead=function(c,d){for(var e=0,f=a.model.feeds.articles.length;f>e;e+=1)if(a.model.feeds.articles[e].object.link===c)return!a.model.feeds.articles[e].object.read&&d?a.model.feeds.info[a.model.feeds.articles[e].actor.address].unread=a.model.feeds.info[a.model.feeds.articles[e].actor.address].unread-1:a.model.feeds.articles[e].object.read&&!d&&(a.model.feeds.info[a.model.feeds.articles[e].actor.address].unread=a.model.feeds.info[a.model.feeds.articles[e].actor.address].unread+1),a.model.feeds.articles[e].object.read=d,b.func.updateArticle(a.model.feeds.articles[e]),void 0},d.$on("SockethubConnectFailed",function(a,b){console.log("Sockethub connect failed! ",b),d.$broadcast("message",{message:b.message,type:"error",timeout:!1}),d.$broadcast("showModalSockethubSettings",{locked:!1})})}]).directive("feedList",[function(){return{restrict:"E",scope:{feeds:"=",settings:"="},template:'<h4 ng-transclude></h4><ul class="nav nav-list nav-pills nav-stacked" ng-controller="feedCtrl">  <li ng-click="switchFeed()"      ng-class="{active: isSelected(), \'all-feeds\': true}">      <span class="glyphicon glyphicon-globe"></span> <span>All Items</span>  </li>  <li ng-show="feeds.infoArray.length == 0"><span>no feeds yet, add some!</span></li>  <li ng-repeat="f in feeds.infoArray | orderBy: \'name\'"      data-toggle="tooltip"       ng-init="showSettings = false"       ng-mouseover="showSettings = true"       ng-mouseleave="showSettings = false"       title="{{ f.url }}"       ng-click="switchFeed(f.url, f.error)"       ng-class="{\'feed-entry\': true, active: isSelected(f.url), error: f.error, loading: !f.loaded}">    <span ng-click="showFeedSettings(f.url)"          ng-class="{glyphicon: f.loaded, \'glyphicon-cog\': (f.loaded || f.error) && showSettings, settings: true, \'icon-loading-small\': !f.loaded}"></span>    <span class="unread-count" ng-bind="f.unread"></span>    <span ng-bind="f.name"></span>  </li></ul>',transclude:!0}}]).directive("articles",[function(){return{restrict:"E",scope:{feeds:"=",settings:"="},template:'<div class="article-text" ng-controller="feedCtrl" ng-show="feeds.articles.length > 0 && currentIsEmpty(settings)"><p>no articles {{feeds.articles.length}} - {{currentIsEmpty(settings)}}</p></div><div ng-repeat="a in (filteredItems = (feeds.articles | orderBy: \'object.date\':true))"     ng-controller="feedCtrl"     ng-class="{read: a.object.read, article: true}"     ng-show="isShowable(a.actor.address, a.object.read, settings)">  <div class="mark-unread" ng-show="a.object.read" ng-click="markRead(a.object.link, false)">Mark Unread</div>  <div class="article-content" ng-click="markRead(a.object.link, true)">    <div class="article-title">      <a target="_blank" href="{{ a.object.link }}">        <h2>{{ a.object.title }}</h2></a>    </div>    <p>feed: <i>{{ feeds.info[a.actor.address].name }}</i></p>    <p rel="{{ a.object.date }}">date: <i>{{ a.object.date | fromNow}}</i></p>    <div class="article-body" data-ng-bind-html-unsafe="a.object.brief_html"></div>  </div></div>',link:function(){for(var a=document.getElementsByClassName("article"),b=0,c=a.length;c>b;b+=1)for(var d=a[b].getElementsByTagName("a"),e=0,f=d.length;f>e;e+=1)d[e].setAttribute("target","_blank")}}}]),angular.module("ngRemoteStorage",[]).value("RSutil",{encode:function(a){return encodeURIComponent(a)}}).factory("RS",["$rootScope","$q","$timeout",function(a,b,c){function d(){return remoteStorage.remote.connected}function e(b){remoteStorage[b.module][b.func].apply(null,b.params).then(function(c){a.$apply(function(){console.log("RS JOB COMPLETE: ",b),b.promise.resolve(c)})},function(c){a.$apply(function(){b.promise.reject(c)})})}var f=!1;remoteStorage.on("ready",function(){f=!0});var g=[],h=!1,i=500;return function j(){if(d()&&h){for(var a in g){var b=g[a];try{e(b)}catch(f){console.log("error : ",f),console.log(f.stack);var k="function"==typeof f.toString?f.toString():f;b.promise.reject(k)}}h=!1}else{console.log("RS not connected yet, delaying calls "+i+"s");for(var a in g)g[a].failTimeout&&g[a].failTimeout<i&&(g[a].promise.reject("timed out"),g.splice(a,1));3e4>i&&(i+=i+500),c(j,i)}}(),{isConnected:d,queue:function(a,b,c){console.log("RS.queue("+a+", "+b+", params):",c),g.push({module:a,func:b,params:c,promise:!1,failTimeout:!1}),h=!0},call:function(a,c,d,e){var f=b.defer();return console.log("RS.call("+a+", "+c+", params):",d),"object"==typeof d&&"undefined"==typeof d[0]?f.reject("RS.call params must be an array"):(g.push({module:a,func:c,params:d,promise:f,failTimeout:e}),h=!0),f.promise}}}]).controller("remoteStorageCtrl",[function(){remoteStorage.disableLog(),remoteStorage.access.claim("sockethub","rw"),remoteStorage.access.claim("rss","rw"),remoteStorage.access.claim("articles","rw"),remoteStorage.caching.disable("/sockethub/"),remoteStorage.caching.disable("/rss/"),remoteStorage.caching.disable("/articles/"),remoteStorage.displayWidget("remotestorage-connect",{redirectUri:window.location.protocol+"//"+window.location.host+"/rscallback.html"}),remoteStorage.sockethub.init(),remoteStorage.rss.init()}]),angular.module("ngSockethubClient",[]).value("SockethubSettings",{conn:{host:"localhost",port:10550,path:"/sockethub",tls:!1,secret:"1234567890"},connected:!1,env:{logo:"/res/img/sockethub-logo.svg"},save:function(a,b){return this.verify(a,b)?(this[a]=b,this[a].port=parseInt(b.port),console.log("SH SAVE "+a+": ",this[a]),!0):(console.log("SH SAVE FAILED "+a+": ",this[a]),!1)},exists:function(a){this.verify(a,settings.conn)},verify:function(a,b){return b||(b=this[a]),b.host&&""!==b.host&&b.port&&""!==b.port&&b.path&&""!==b.path&&"boolean"==typeof b.tls&&b.secret&&""!==b.secret?!0:!1}}).factory("SH",["$rootScope","$q","$timeout","SockethubSettings",function(a,b,c,d){function e(){return l?l.connected:!1}function f(){return l?l.registered:!1}function g(d){var e=b.defer(),f=500;return function g(){d.testFunc()?(console.log("SH: calling: "+d.callFunc),l[d.callFunc].apply(l,d.callParams).then(function(b){a.$apply(e.resolve(b))},function(b){a.$apply(e.reject(b))})):(console.log("SH: delaying call "+f+"s"),3e4>f&&(f+=2*f),c(g,f))}(),e.promise}function h(c){console.log("ngSockethubClient.connect() ",c);var e=b.defer(),f="ws://";d.connected=!1,d.conn.tls&&(f="wss://");var g={};return c&&c.register&&(g={register:{secret:d.conn.secret}}),l=SockethubClient.connect(f+d.conn.host+":"+d.conn.port+d.conn.path,g),l.on("connected",function(){console.log("Sockethub connected"),d.connected=!0,m.connected.sockethub?a.$apply(m.connected.sockethub()):a.$apply(function(){e.resolve()})}),l.on("registered",function(){console.log("Sockethub connected & registered"),d.connected=!0,m.registered.sockethub?a.$apply(m.registered.sockethub()):a.$apply(function(){e.resolve()})}),l.on("registration-failed",function(b){console.log("Sockethub register failed ",b),a.$apply(function(){e.reject(b)})}),l.on("failed",function(b){console.log("Sockethub connection failed ",b),a.$apply(function(){e.reject("Failed connecting to sockethub at "+f+d.conn.host+":"+d.conn.port+d.conn.path)})}),l.on("disconnected",function(a){console.log("SH received disconnect(close) "+a),d.connected=!1}),l.on("message",function(b){b.platform&&m.message[b.platform]?(console.log("SH passing message to platform: "+b.platform),a.$apply(m.message[b.platform](b))):console.log("SH received message with nothing to call: ",b)}),l.on("unexpected-response",function(a){console.log("SH unexpected response: ",a)}),e.promise}function i(){var a=b.defer();return console.log("SH.register() called"),g({testFunc:e,callFunc:"register",callParams:[{secret:d.conn.secret}]}).then(a.resolve,a.reject),a.promise}function j(a,c,d,e){var h=b.defer(),i={};return i[c]={},i[c][d]=e,g({testFunc:f,callFunc:"set",callParams:[a,i]}).then(h.resolve,h.reject),h.promise}function k(a,c){var d=b.defer();return g({testFunc:f,callFunc:"sendObject",callParams:[a,c]}).then(d.resolve,d.reject),d.promise}var l,m={error:{},message:{},response:{},close:{},registered:{},connected:{}},n=function(a,b,c){m[b][a]=c};return{connect:h,register:i,isConnected:e,isRegistered:f,set:j,submit:k,on:n}}]).run(["$rootScope",function(a){a.$on("showModalSockethubSettings",function(a,b){backdrop_setting=!0,"object"==typeof b&&"undefined"!=typeof b.locked&&b.locked&&(backdrop_setting="static"),$("#modalSockethubSettings").modal({show:!0,keyboard:!0,backdrop:backdrop_setting})}),a.$on("closeModalSockethubSettings",function(){$("#modalSockethubSettings").modal("hide")})}]).directive("sockethubSettings",["SH","SockethubSettings","$rootScope",function(a,b,c){return{restrict:"A",template:'<div id="modalSockethubSettings" class="modal fade"><div class="modal-dialog"><div class="modal-content">  <div class="modal-header" style="text-align:center;">    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>    <img data-ng-src="{{ settings.env.logo }}" width="200" ng-cloak/>  </div>  <div class="modal-body">    <form name="settingsSockethub" role="form" novalidate>      <fieldset>        <div class="form-group">          <label for="host">Hostname</label>          <div class="controls">            <input type="text" class="required form-control" name="host" placeholder="Enter hostname..." ng-model="settings.conn.host" required>          </div>        </div>        <div class="form-group">          <label for="port">Port</label>          <div class="controls">            <input type="text" class="required form-control" name="port" placeholder="Enter port..." ng-model="settings.conn.port" required>          </div>        </div>        <div class="form-group">          <label for="path">Path</label>          <div class="controls">            <input type="text" class="required form-control" name="path" placeholder="Enter path (if any)..." ng-model="settings.conn.path">          </div>        </div>        <div class="form-group">          <label>            <input type="checkbox" name="tls" ng-model="settings.conn.tls"> TLS          </label>        </div>        <div class="form-group">          <label for="secret">Secret</label>          <div class="controls">            <input type="text" class="required form-control" name="secret" placeholder="Enter secret..." ng-model="settings.conn.secret" required>          </div>        </div>      </fieldset>    <p></p>    <div class="message-container">      <div message></div>    </div>  </div>  <div class="modal-footer">        <div class="control-group">          <div class="controls">            <button class="btn btn-primary" ng-click="save(settings.conn)"                     ng-disabled="!settings.verify(\'conn\', settings.conn) || saving">Submit</button>          </div>        </div>    </form>  </div></div></div></div>',link:function(d){d.saving=!1,d.settings=b,d.save=function(e){d.saving=!0,b.save("conn",e),c.$broadcast("message",{message:"attempting to connect to sockethub",type:"info",timeout:!1}),a.connect({register:!0}).then(function(){d.saving=!1,console.log("connected to sockethub"),c.$broadcast("message",{message:"connected to sockethub",type:"success",timeout:!0}),$("#modalSockethubSettings").modal("hide")},function(a){d.saving=!1,console.log("error connection to sockethub: ",a),c.$broadcast("message",{message:a,type:"error",timeout:!1})})}}}}]);