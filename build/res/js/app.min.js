/*! built for dogfeed 2013-10-28 */
angular.module("dogfeed",["ngFeeds","ngSockethubClient","ngRemoteStorage","ngMessages"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"feeds.html"}).otherwise({redirectTo:"/"})}]).run(["RemoteStorageConfig",function(a){a.modules=[["sockethub","rw",{cache:!1}],["feeds","rw",{cache:!1}],["articles","rw",{cache:!1}]]}]).run(["MessagesConfig",function(a){a.timeout=15e3}]).run(["SockethubSettings","SH","RS","$rootScope","$timeout",function(a,b,c,d){function e(c){console.log("USING SH CONFIG: ",c),a.save("conn",c)?(d.$broadcast("message",{message:"attempting to connect to sockethub",type:"info",timeout:!1}),b.connect({register:!0}).then(function(){d.$broadcast("message",{message:"connected to sockethub",type:"success",timeout:!0})},function(a){console.log("error connecting to sockethub: ",a),d.$broadcast("SockethubConnectFailed",{message:a})})):d.$broadcast("message",{message:"failed saving sockethub credentials",type:"success",timeout:!0})}var f={host:"localhost",port:10550,path:"/sockethub",tls:!1,secret:"1234567890"};c.call("sockethub","getConfig",["dogfeed"],3e3).then(function(a){console.log("GOT SH CONFIG: ",a),("object"!=typeof a||"string"!=typeof a.host)&&(a=f),e(a)},function(a){console.log("RS.call error: ",a),e(f)})}]).run(["SockethubSettings","SH","$rootScope","RS","$timeout",function(a,b,c,d,e){d.isConnected()||e(function(){d.isConnected()||c.$broadcast("message",{message:"remotestorage-connect",timeout:!1})},6e3)}]).run(["$rootScope",function(a){a.$on("showModalAddFeed",function(a,b){backdrop_setting=!0,"object"==typeof b&&"undefined"!=typeof b.locked&&b.locked&&(backdrop_setting="static"),$("#modalAddFeed").modal({show:!0,keyboard:!0,backdrop:backdrop_setting})}),a.$on("closeModalAddFeed",function(){$("#modalAddFeed").modal("hide")})}]).filter("urlEncode",[function(){return function(a){return encodeURIComponent(escape(a))}}]).filter("fromNow",[function(){return function(a){return new Date(a).toDateString()}}]).filter("pagination",[function(){var a=0;return function(b){return console.log("pagination received: ",b),b?(a+=1,a>10?(console.log("pagination returned false"),!1):(console.log("pagination returned article: ",b),b)):!1}}]).controller("titlebarCtrl",["$scope","$rootScope","SockethubSettings","RS",function(a,b,c,d){a.addFeed=function(){b.$broadcast("showModalAddFeed",{locked:!1})},a.sockethubSettings=function(){b.$broadcast("showModalSockethubSettings",{locked:!1})},a.$watch("settings.connected",function(){c.connected&&(c.conn.port=Number(c.conn.port),d.call("sockethub","writeConfig",[c.conn]).then(function(){console.log("Sockethub config saved to remoteStorage")},function(a){console.log("Failed saving Sockethub config to remoteStorage: ",a)}))})}]),angular.module("ngFeeds",["ngRemoteStorage","ngSockethubClient"]).value("configHelper",{exists:function(a,b){b||(b=a);for(var c in a)if(!b[c])return!1;return!0},set:function(a,b){for(var c in b)a[c]=b[c];return a}}).run(["$routeParams","$rootScope","Feeds",function(a,b,c){b.feeds=c.data}]).factory("Feeds",["$q","SH","configHelper","RS","$rootScope",function(a,b,c,d,e){function f(a){return c.exists(h,a)}function g(a){var b={url:a.actor.address,name:a.actor.name,cache_articles:20,last_fetched:(new Date).getTime(),unread:0};i.info[b.url]=b,i.infoArray.push(b),d.queue("feeds","add",[b])}var h={},i={articles:[],info:{},infoArray:[],groups:{},groupArray:[]},j={};j.setConfig=function(b){var d=a.defer();return f(b)?(b&&c.set(h,b),d.resolve(h)):d.reject("config not set correctly"),d.promise},j.updateArticle=function(b){var c=a.defer(),e={link:b.object.link,title:b.object.title,date:b.object.date,html:b.object.html,text:b.object.text,brief_html:b.object.brief_html,brief_text:b.object.brief_text,read:b.object.read?!0:!1,source_link:b.actor.address,source_title:b.actor.name};return d.call("articles","update",[e]).then(function(a){c.resolve(a)},function(a){c.reject(a)}),c.promise},function(){d.call("feeds","getAll",[""]).then(function(a){console.log("Feeds: got feed urls from remoteStorage ",a);for(var b in a)a[b]&&"undefined"!=typeof a[b].url?(a[b].url,a[b].unread=0,j.fetchFeed(a[b].url)):console.log("ERROR processing url["+b+"]: ",a[b])},function(a){console.log("error: unable to get feed list from remoteStorage: ",a),e.$broadcast("message",{message:"unable to get feed list from remotestorage",type:"error",timeout:!1})})}(),j.updateFeed=function(b){var c=a.defer();return d.call("feeds","add",[b]).then(function(a){i.info[b.url]=b,c.resolve(a)},function(a){c.reject(a)}),c.promise},j.removeFeed=function(b){var c=a.defer();return d.call("feeds","remove",[b]).then(function(a){delete i.info[b];for(var d=0,e=i.infoArray.length;e>d;d+=1)if(i.infoArray[d]&&i.infoArray[d].url===b){i.infoArray.splice(d,1);break}for(console.log("articles count: "+i.articles.length),d=0,e=i.articles.length;e>d;d+=1)i.articles[d]&&i.articles[d].actor.address===b&&i.articles.splice(d,1);console.log("articles count: "+i.articles.length),console.log("feed removed: ",b),c.resolve(a)},function(a){c.reject(a)}),c.promise};var k={};return j.fetchFeed=function(a){for(var c=!1,d=0,f=i.infoArray.length;f>d;d+=1)if(i.infoArray[d]&&i.infoArray[d].url===a){c=!0;break}if(!c&&!k[a]){k[a]=!0;var g={verb:"fetch",platform:"rss",actor:{address:"rss"},target:[{address:a}]};console.log("FETCH: ",g),b.submit.call(g).then(function(){i.info[a].loaded=!0},function(a){console.log("failed fetch"),e.$broadcast("message",{message:"failed fetching feed: "+a,type:"error"})})}},b.on("rss","message",function(a){console.log("Feeds received message ",a);var b=a.actor.address;return a.status?(i.info[b]?i.info[b].name&&i.info[b].name!==i.info[b].url||(console.log("#### - updating name: ",a),i.info[b].name=a.actor.name):(console.log("#### - adding to data.info: ",a),g(a)),a.object.read||(a.object.read=!1,i.info[b].unread="number"==typeof i.info[b].unread?i.info[b].unread+1:1),i.articles.push(a),d.call("articles","getByUrl",[a.object.link]).then(function(c){c&&(a.object.read=c.read?c.read:!1),a.object.read&&(i.info[b].unread="number"==typeof i.info[b].unread?i.info[b].unread-1:0)},function(a){console.log("ARTICLE FETCH ERROR: ",a)}),void 0):(console.log("received error message from sockethub: ",a),e.$broadcast("message",{type:"error",message:a.target[0].address+" "+a.message}),void 0)}),{config:h,data:i,func:j}}]).controller("addFeedCtrl",["$scope","Feeds",function(a,b){a.adding=!1,a.add=function(c){a.adding=!0,b.func.fetchFeed(c),a.adding=!1}}]).controller("feedSettingsCtrl",["$scope","Feeds",function(a,b){a.saving=!1,a.saveFeedSettings=function(c){a.saving=!0,b.func.updateFeed(c).then(function(){$("#modalFeedSettings").modal("hide"),$rootScope.$broadcast("message",{type:"success",message:"updated feed "+url}),a.saving=!1},function(b){console.log("rss feed update failed!: ",b),$rootScope.$broadcast("message",{type:"error",message:b.message}),$("#modalFeedSettings").modal("hide"),a.saving=!1})},a.cancelFeedSettings=function(){$("#modalFeedSettings").modal("hide"),a.model.feeds.info[a.feeds.edit].name=a.model.feeds._editName,a.saving=!1}}]).controller("feedCtrl",["$scope","Feeds","$rootScope","$timeout","$routeParams",function(a,b,c,d,e){console.log("--- feedCtrl"),a.model={settings:{showRead:!0,articlesPerPage:10,displayCap:5,displayed:{}}},a.saving=!1,c.feeds.current={name:"",indexes:[]},c.feeds.edit={name:"",url:"",origName:""},e.feed&&(c.$broadcast("message",{message:"attempting to fetch feed from "+e.feed,type:"info"}),c.selectedFeed=e.feed,b.func.fetchFeed(e.feed)),a.deleteFeed=function(d){a.saving=!0,b.func.removeFeed(d).then(function(){$("#modalFeedSettings").modal("hide"),c.$broadcast("message",{type:"success",message:"deleted feed "+d}),a.saving=!1,a.isSelected(d)&&a.switchFeed(d)},function(b){console.log("error removing rss feed!: ",b),c.$broadcast("message",{type:"error",message:b.message}),$("#modalFeedSettings").modal("hide"),a.saving=!1})},c.$on("SockethubConnectFailed",function(a,b){console.log("Sockethub connect failed! ",b),c.$broadcast("message",{message:b.message,type:"error",timeout:!1}),c.$broadcast("showModalSockethubSettings",{locked:!1})})}]).value("isSelected",function(a,b,c){if(0===a.feeds.current.indexes.length)return c||!b?!0:!1;for(var d=0,e=a.feeds.current.indexes.length;e>d;d+=1)if(a.feeds.current.indexes[d]===b)return!0;return!1}).directive("feedList",["isSelected",function(a){function b(b){b.isSelected=function(c,d){return a.apply(this,[b,c,d])},b.switchFeed=function(a,c,d){return console.log("SWITCH FEED: "+a,b.feeds),d?!1:(a?(b.feeds.current.name=b.feeds.info[a].name,b.feeds.current.indexes=[a]):(b.feeds.current.name="",b.feeds.current.indexes.length=0),void 0)},b.showFeedSettings=function(a){console.log("showFeedSettings: "+a),a&&(b.feeds.edit.url=a,b.feeds.edit.name=b.feeds.info[a].name,b.feeds.edit.origName=b.feeds.info[a].name,$("#modalFeedSettings").modal({show:!0,keyboard:!0,backdrop:!0}))}}return{restrict:"E",scope:{feeds:"=",settings:"="},templateUrl:"res/js/feeds/feeds.html.tpl",controller:b,transclude:!0}}]).directive("articles",["isSelected","Feeds",function(a,b){function c(c){c.isSelected=function(b,d){return a.apply(this,[c,b,d])},c.currentIsEmpty=function(a){if(!c.feeds.current.name)return!1;for(var b=0,d=c.feeds.current.indexes.length;d>b;b+=1){if(c.feeds.info[c.feeds.current.indexes[b]]&&c.feeds.info[c.feeds.current.indexes[b]].unread>0)return!1;if(a.showRead)return!1}return!0},c.markRead=function(a,d){for(var e=0,f=c.feeds.articles.length;f>e;e+=1)if(c.feeds.articles[e].object.link===a)return!c.feeds.articles[e].object.read&&d?c.feeds.info[c.feeds.articles[e].actor.address].unread=c.feeds.info[c.feeds.articles[e].actor.address].unread-1:c.feeds.articles[e].object.read&&!d&&(c.feeds.info[c.feeds.articles[e].actor.address].unread=c.feeds.info[c.feeds.articles[e].actor.address].unread+1),c.feeds.articles[e].object.read=d,b.func.updateArticle(c.feeds.articles[e]),void 0},c.isShowable=function(a,b,d,e){return c.isSelected(a,!0)?d.displayed[e]?!0:Object.keys(d.displayed).length>=d.displayCap?!1:b?d.showRead?(console.log("D"),d.displayed[e]=!0,!0):(console.log("E"),!1):(d.displayed[e]=!0,console.log("F ",d.displayed),!0):!1}}return{restrict:"E",scope:{feeds:"=",settings:"="},controller:c,templateUrl:"res/js/feeds/articles.html.tpl",link:function(){for(var a=document.getElementsByClassName("article"),b=0,c=a.length;c>b;b+=1)for(var d=a[b].getElementsByTagName("a"),e=0,f=d.length;f>e;e+=1)d[e].setAttribute("target","_blank")}}}]),angular.module("ngRemoteStorage",["ngCommandQueue"]).value("RemoteStorageConfig",{modules:[]}).factory("RS",["$rootScope","$q","$timeout","cQueue",function(a,b,c,d){function e(){return remoteStorage.remote.connected}function f(b){console.log("callRS:",b),remoteStorage[b.methods[0]][b.methods[1]].apply(null,b.params).then(function(c){a.$apply(function(){b.defer&&b.defer.resolve(c)})},function(c){a.$apply(function(){if(!b.defer)throw new Error(c);b.defer.reject(c)})})}var g=!1;remoteStorage.on("ready",function(){g=!0});var h=d.init(f);return{isConnected:e,queue:function(a,b,c){console.log("RS.queue("+a+", "+b+", params):",c),h.add({methods:[a,b],params:c,defer:!1,timeout:0,condition:e})},call:function(a,c,d,f){var g=b.defer();return console.log("RS.call("+a+", "+c+", params):",d),"object"==typeof d&&"undefined"==typeof d[0]?g.reject("RS.call params must be an array"):h.add({methods:[a,c],params:d,defer:g,timeout:f,condition:e}),g.promise}}}]).controller("remoteStorageCtrl",["RemoteStorageConfig","$scope",function(a,b){remoteStorage.disableLog(),b.$watch("RScfg.modules",function(){console.log("remoteStorageCtrl initializing modules: ",a.modules);var b,c;for(c in a.modules)b=a.modules[c],console.log("claim: "+b[0]+" a: "+b[1]),remoteStorage.access.claim(b[0],b[1]),b[2]&&"boolean"==typeof b[2].cache&&!b[2].cache&&remoteStorage.caching.disable("/"+b[0]+"/");remoteStorage.displayWidget("remotestorage-connect",{redirectUri:window.location.protocol+"//"+window.location.host+"/rscallback.html"});for(c in a.modules)b=a.modules[c],remoteStorage[b[0]]&&"function"==typeof remoteStorage[b[0]].init&&remoteStorage[b[0]].init()})}]),angular.module("ngCommandQueue",[]).factory("cQueue",["$q","$timeout",function(a,b){function c(c){function d(b){var c=a.defer();try{"object"!=typeof b.methods||"undefined"==typeof b.methods[0]?(console.error("methods property must be an array, indicating function order from left to right"),c.reject()):"object"!=typeof b.params||"undefined"==typeof b.params[0]?(console.error("params property must be an array, indicating parameter order from left to right"),c.reject()):"function"!=typeof b.condition?b.condition=function(){return!0}:"object"!=typeof b.defer?b.defer=!1:"number"!=typeof b.timeout&&(b.timeout=0),b.age=0,c.resolve(b)}catch(d){c.reject(d)}return c.promise}function e(a){return d(a).then(function(a){console.log("adding to queue: "+a.methods.join(" - ")),g.push(a),h=!0})}function f(){if(g.length<=0)return h=!1,void 0;for(var a in g){var b=g[a];if(!b.condition())break;g.splice(a,1);try{c(b)}catch(d){console.log("error : ",d),console.log(d.stack),b.promise.reject(d)}break}}var g=[],h=!1,i=1e3,j=250;return function k(){var a=0;if(h){for(a in g)0!==g[a].timeout&&g[a].timeout<g[a].age?(console.log("timing out "+g[a].methods.join("] [")),g[a].defer.reject("timed out"),g.splice(a,1)):g[a].age=g[a].age+i;b(f,j)}b(k,i)}(),{add:e}}return{init:function(a){if("function"!=typeof a)throw new Error("cQueue init must pass a function to call when an entry from the queue is ready. The function should take the queue object as its first param");return new c(a)}}}]),angular.module("ngMessages",[]).value("MessagesConfig",{timeout:4e3}).directive("message",["$rootScope","$timeout","MessagesConfig",function(a,b,c){return{restrict:"A",template:'<div class="alert alert-{{ m.type }}" ng-show="haveMessage">  <strong>{{m.title}}</strong>   <span>{{m.message}}</span></div>',link:function(d){d.haveMessage=!1,d.m={type:"",title:"",message:""};var e={"remotestorage-connect":{type:"warning",title:"Connect to remoteStorage",message:"if you want your changes to persist"},"sockethub-config":{type:"warning",title:"Sockethub configuration needed",message:"You must fill in your Sockethub connection details"},"sockethub-connect":{type:"danger",title:"Sockethub connection error",message:"Unable to connect to Sockethub please check your configuration and try again"},"sockethub-register":{type:"danger",title:"Sockethub registration problem",message:"We were unable to register with your Sockethub instance"},"xmpp-connect":{type:"danger",title:"XMPP connection failed",message:"There was a problem connecting to the XMPP server, please verify you settings"},unknown:{type:"danger",title:"An unknown error has occurred",message:""}};a.$on("message",function(a,f){var g="boolean"==typeof f.timeout?f.timeout:!0;if(d.haveMessage=!1,"undefined"==typeof f&&(f="no error specified"),"clear"===f.type)return d.haveMessage=!1,d.m={type:"",title:"",message:""},void 0;"undefined"!=typeof e[f.message]?d.m=e[f.message]:"string"==typeof f.message&&("success"===f.type?d.m.title="Success":"info"===f.type?d.m.title="Info":(d.m.title="Error",f.type="danger"),d.m.message=f.message,d.m.type=f.type),d.m.timeout=g,console.log("info message event set: ",d.m);var h=d.m.message;d.haveMessage=!0,g&&b(function(){d.m.timeout&&h==d.m.message&&(d.haveMessage=!1,d.m={type:"",title:"",message:"",timeout:!0})},c.timeout)})}}}]),angular.module("ngSockethubClient",["ngCommandQueue"]).value("SockethubSettings",{conn:{host:"localhost",port:10550,path:"/sockethub",tls:!1,secret:"1234567890"},connected:!1,env:{logo:"/res/img/sockethub-logo.svg"},save:function(a,b){return this.verify(a,b)?(this[a]=b,this[a].port=+b.port,console.log("SH SAVE ["+a+"]: ",this[a]),!0):(console.log("SH SAVE FAILED "+a+": ",this[a]),!1)},exists:function(a){this.verify(a,settings.conn)},verify:function(a,b){return b||(b=this[a]),b.host&&""!==b.host&&b.port&&""!==b.port&&b.path&&""!==b.path&&"boolean"==typeof b.tls&&b.secret?!0:!1}}).factory("SH",["$rootScope","$q","$timeout","SockethubSettings","cQueue",function(a,b,c,d,e){function f(){return n?n.connected:!1}function g(){return n?n.registered:!1}function h(b){console.log("callSH called ",b),n[b.methods[0]].apply(n,b.params).then(function(c){a.$apply(function(){b.defer.resolve(c)})},function(c){a.$apply(function(){b.defer.reject(c.message)})})}function i(c){console.log("ngSockethubClient.connect() ",c);var e=b.defer(),f="ws://";d.connected=!1,d.conn.tls&&(f="wss://");var g={};return c&&c.register&&(g={register:{secret:d.conn.secret}}),console.log("SOCKEHTHUB CONNECT: "+f+d.conn.host+":"+d.conn.port+d.conn.path),n=SockethubClient.connect(f+d.conn.host+":"+d.conn.port+d.conn.path,g),n.on("connected",function(){console.log("Sockethub connected"),d.connected=!0,o.connected.sockethub?a.$apply(o.connected.sockethub()):a.$apply(function(){e.resolve()})}),n.on("registered",function(){console.log("Sockethub connected & registered"),d.connected=!0,o.registered.sockethub?a.$apply(o.registered.sockethub()):a.$apply(function(){e.resolve()})}),n.on("registration-failed",function(b){console.log("Sockethub register failed ",b),a.$apply(function(){e.reject(b)})}),n.on("failed",function(b){console.log("Sockethub connection failed ",b),a.$apply(function(){e.reject("Failed connecting to sockethub at "+f+d.conn.host+":"+d.conn.port+d.conn.path)})}),n.on("disconnected",function(a){console.log("SH received disconnect(close) "+a),d.connected=!1}),n.on("message",function(b){b.platform&&o.message[b.platform]?(console.log("SH passing message to platform: "+b.platform),a.$apply(o.message[b.platform](b))):console.log("SH received message with nothing to call: ",b)}),n.on("unexpected-response",function(a){console.log("SH unexpected response: ",a)}),e.promise}function j(){var a=b.defer();return console.log("SH.register() called"),p.add({methods:["register"],params:[{secret:d.conn.secret}],defer:a,timeout:0,condition:f}),a.promise}function k(a,c,d,e){var f=b.defer(),h={};return h[c]={},h[c][d]=e,p.add({methods:["set"],params:[a,h],defer:f,timeout:0,condition:g}),f.promise}function l(a,c){var d=b.defer();return p.add({condition:g,methods:["sendObject"],params:[a,c],defer:d,timeout:0}),d.promise}function m(a,b){p.add({condition:g,methods:["sendObject"],params:[a,b],defer:!1,timeout:0})}var n,o={error:{},message:{},response:{},close:{},registered:{},connected:{}},p=e.init(h),q=function(a,b,c){o[b][a]=c};return{connect:i,register:j,isConnected:f,isRegistered:g,set:k,submit:{call:l,queue:m},on:q}}]).run(["$rootScope",function(a){a.$on("showModalSockethubSettings",function(a,b){backdrop_setting=!0,"object"==typeof b&&"undefined"!=typeof b.locked&&b.locked&&(backdrop_setting="static"),$("#modalSockethubSettings").modal({show:!0,keyboard:!0,backdrop:backdrop_setting})}),a.$on("closeModalSockethubSettings",function(){$("#modalSockethubSettings").modal("hide")})}]).directive("sockethubSettings",["SH","$rootScope","SockethubSettings",function(a,b,c){return{restrict:"A",template:'<div id="modalSockethubSettings" class="modal fade"><div class="modal-dialog"><div class="modal-content">  <div class="modal-header" style="text-align:center;">    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>    <img data-ng-src="{{ sockethub.settings.env.logo }}" width="200" ng-cloak/>  </div>  <div class="modal-body">    <form name="settingsSockethub" role="form" novalidate>      <fieldset>        <div class="form-group">          <label for="host">Hostname</label>          <div class="controls">            <input type="text" class="required form-control" name="host" placeholder="Enter hostname..." ng-model="sockethub.settings.conn.host" required>          </div>        </div>        <div class="form-group">          <label for="port">Port</label>          <div class="controls">            <input type="text" class="required form-control" name="port" placeholder="Enter port..." ng-model="sockethub.settings.conn.port" required>          </div>        </div>        <div class="form-group">          <label for="path">Path</label>          <div class="controls">            <input type="text" class="required form-control" name="path" placeholder="Enter path (if any)..." ng-model="sockethub.settings.conn.path">          </div>        </div>        <div class="form-group">          <label>            <input type="checkbox" name="tls" ng-model="sockethub.settings.conn.tls"> TLS          </label>        </div>        <div class="form-group">          <label for="secret">Secret</label>          <div class="controls">            <input type="text" class="required form-control" name="secret" placeholder="Enter secret..." ng-model="sockethub.settings.conn.secret" required>          </div>        </div>      </fieldset>    <p></p>  </div>  <div class="modal-footer">        <div class="control-group">          <div class="controls">            <button class="btn btn-primary" ng-click="sockethub.save(sockethub.settings.conn)"                     ng-disabled="!sockethub.settings.verify(\'conn\', sockethub.settings.conn) || saving">Submit</button>          </div>        </div>    </form>  </div></div></div></div>',link:function(d){d.sockethub={saving:!1,settings:c},d.sockethub.save=function(c){d.sockethub.saving=!0,d.sockethub.settings.save("conn",c),b.$broadcast("message",{message:"attempting to connect to sockethub",type:"info",timeout:!1}),a.connect({register:!0}).then(function(){d.sockethub.saving=!1,console.log("connected to sockethub"),b.$broadcast("message",{message:"connected to sockethub",type:"success",timeout:!0}),$("#modalSockethubSettings").modal("hide")},function(a){d.sockethub.saving=!1,console.log("error connection to sockethub: ",a),b.$broadcast("message",{message:a,type:"error",timeout:!1})})}}}}]),angular.module("ngSockethubRemoteStorage",["ngSockethubClient","ngRemoteStorage"]).run(["$rootScope","$q","$timeout","SockethubSettings","SH","RS",function(a,b,c,d,e,f){e.on("sockethub","registered",function(){console.log("Sockethub-RemoteStorage: saving sockethub config to remoteStorage ",d.conn),f.call("sockethub","writeConfig",[d.conn]).then(function(){console.log("config saved to RS")},function(b){console.log("Sockethub-RemoteStorage: Failed saving sockethub config to remoteStorage: ",b),a.$broadcast("message",{message:"failed saving sockethub config to remote storage",type:"error",timeout:!0})})})}]).factory("SockethubBootstrap",["RS","SockethubSettings","$rootScope","SH",function(a,b,c,d){function e(e){a.call("sockethub","getConfig",[""]).then(function(a){console.log("GOT SH CONFIG: ",a);var f={};e||(e={host:"localhost",port:10550,path:"/sockethub",tls:flse,secret:"1234567890"}),f="object"!=typeof a||"string"!=typeof a.host?e:a,console.log("USING SH CONFIG: ",f),b.save("conn",f)?(c.$broadcast("message",{message:"attempting to connect to sockethub",type:"info",timeout:!1}),d.connect({register:!0}).then(function(){c.$broadcast("message",{message:"connected to sockethub",type:"success",timeout:!0})},function(a){console.log("error connecting to sockethub: ",a),c.$broadcast("SockethubConnectFailed",{message:a})})):c.$broadcast("message",{message:"failed saving sockethub credentials",type:"error",timeout:!0})},function(a){console.log("RS.call error: ",a)})}return{run:e}}]);