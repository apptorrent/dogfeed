/*! built for dogfeed 2013-08-12 */
!function(){var a="articles";RemoteStorage.defineModule(a,function(b){return{exports:{init:function(){b.declareType(a,{description:"collections of articles, typically retreived from RSS feeds",key:"link",type:"object",properties:{link:{type:"string",description:"link to the article",required:!0,format:"uri"},title:{type:"string",description:"human readable name article",required:!1},date:{type:"number",description:"date of article",required:!1},html:{type:"string",description:"html content of the article",required:!1},text:{type:"string",description:"text content of the article",required:!1},brief_html:{type:"string",description:"a brief blurb of the article, in html",required:!1},brief_text:{type:"string",description:"a brief blurb of the article, in text",required:!1},read:{type:"boolean",description:"flag if the article has been read or not",required:!0},source_link:{type:"string",description:"link to the source feed that this article may have been linked from",required:!1,format:"uri"},source_title:{type:"string",description:"human readable name  of the source feed that this article may have been linked from",required:!1}}})},on:b.on.bind(b),remove:b.remove.bind(b),update:function(c){return c.id="string"==typeof c.link?encodeURIComponent(escape(c.link)):b.uuid(),"undefined"==typeof c.read&&(c.read=!1),b.storeObject(a,c.id,c)},get:b.getObject.bind(b),getAll:b.getAll.bind(b),getListing:b.getListing.bind(b)}}})}(),function(){var a="rss";RemoteStorage.defineModule(a,function(b){return{exports:{init:function(){b.declareType(a,{description:"RSS Feed URLs and related settings",key:"url",type:"object",properties:{url:{type:"string",description:"URL of the RSS feed",required:!0,format:"uri"},name:{type:"string",description:"human readable name of feed",required:!1},cache_articles:{type:"number",description:"number of articles to store",required:!1},last_fetched:{type:"number",description:"last time feed was fetched",required:!1}}})},on:b.on.bind(b),remove:b.remove.bind(b),add:function(c){return c.id="string"==typeof c.url?encodeURIComponent(escape(c.url)):b.uuid(),b.storeObject(a,c.id,c)},getAll:b.getAll.bind(b),getListing:b.getListing.bind(b)}}})}(),function(){var a="sockethub";RemoteStorage.defineModule(a,function(a){return{exports:{c:a,init:function(){a.declareType("config",{description:"sockethub config file",type:"object",properties:{host:{type:"string",description:"the hostname to connect to",format:"uri",required:!0},port:{type:"number",description:"the port number to connect to",required:!0},path:{type:"string",description:"path portion of the URI, if any",required:!1},tls:{type:"boolean",description:"whether or not to use TLS",required:!1},secret:{type:"string",description:"the secret to identify yourself with the sockethub server",required:!0}}})},getConfig:function(){return a.getObject("config.json")},writeConfig:function(b){return a.storeObject("config","config.json",b)}}}})}();